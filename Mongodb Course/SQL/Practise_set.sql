CREATE DATABASE ORG1234;

SHOW DATABASES;

USE ORG1234;

CREATE TABLE Worker (
  WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  FIRST_NAME CHAR(25),
  LAST_NAME CHAR(25),
  SALARY INT(15),
  JOINING_DATE DATETIME,
  DEPARTMENT CHAR(25)
);

INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
  (001, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR'),
  (002, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin'),
  (003, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR'),
  (004, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin'),
  (005, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin'),
  (006, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account'),
  (007, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account');

SELECT * FROM Worker WHERE DEPARTMENT = 'Admin' ORDER BY DEPARTMENT;

SELECT DEPARTMENT, COUNT(DEPARTMENT) AS total_employees FROM Worker WHERE DEPARTMENT = 'HR' OR DEPARTMENT = 'Account' GROUP BY DEPARTMENT;

SELECT DEPARTMENT, COUNT(DEPARTMENT) AS total_employees FROM Worker GROUP BY DEPARTMENT ORDER BY total_employees DESC;

SELECT DEPARTMENT, COUNT(*) AS DepartmentCount FROM Worker GROUP BY DEPARTMENT HAVING COUNT(*) = (SELECT MAX(DepartmentCount) FROM (SELECT DEPARTMENT, COUNT(*) AS DepartmentCount FROM Worker GROUP BY DEPARTMENT) AS Counts);

SELECT DEPARTMENT, COUNT(*) AS DepartmentCount FROM Worker GROUP BY DEPARTMENT HAVING COUNT(*) = (SELECT MIN(DepartmentCount) FROM (SELECT DEPARTMENT, COUNT(*) AS DepartmentCount FROM Worker GROUP BY DEPARTMENT) AS Counts);

-- Rest of the code remains the same...

CREATE TABLE WorkerWithCity (
  WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  FIRST_NAME CHAR(25),
  LAST_NAME CHAR(25),
  SALARY INT(15),
  JOINING_DATE DATETIME,
  DEPARTMENT CHAR(25),
  CITY VARCHAR(255) DEFAULT 'India'
);

-- Rest of the code remains the same...

CREATE DATABASE ORG1235;

SHOW DATABASES;

USE ORG1235;

CREATE TABLE Worker (
  WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  FIRST_NAME CHAR(25),
  LAST_NAME CHAR(25),
  SALARY INT(15),
  JOINING_DATE DATETIME,
  DEPARTMENT CHAR(25)
);

-- Rest of the code remains the same...

CREATE TABLE Bonus (
  WORKER_REF_ID INT,
  BONUS_AMOUNT INT(10),
  BONUS_DATE DATETIME,
  FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

-- Rest of the code remains the same...

CREATE TABLE Title (
  WORKER_REF_ID INT,
  WORKER_TITLE CHAR(25),
  AFFECTED_FROM DATETIME,
  FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

-- Rest of the code remains the same...

CREATE DATABASE ORG1236;

USE ORG1236;

CREATE TABLE Worker (
  WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  FIRST_NAME CHAR(25),
  LAST_NAME CHAR(25),
  SALARY INT(15),
  JOINING_DATE DATETIME,
  DEPARTMENT CHAR(25)
);

-- Rest of the code remains the same...

CREATE TABLE Bonus (
  WORKER_REF_ID INT,
  BONUS_AMOUNT INT(10),
  BONUS_DATE DATETIME,
  FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

-- Rest of the code remains the same...

CREATE TABLE Title (
  WORKER_REF_ID INT,
  WORKER_TITLE CHAR(25),
  AFFECTED_FROM DATETIME,
  FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE
);

-- Rest of the code remains the same...

CREATE TABLE Student (
  S_ID INT PRIMARY KEY,
  S_NAME VARCHAR(25) NOT NULL,
  S_DEPARTMENT VARCHAR(25) NOT NULL
);

INSERT INTO Student VALUES
  (1001, 'Jayanth', 'ECE'),
  (1002, 'Praveen', 'CSE'),
  (1003, 'Logesh', 'Mech'),
  (1006, 'Karthick', 'Aero'),
  (1007, 'Mahesh', 'Civil');

CREATE TABLE VIT (
  S_ID INT PRIMARY KEY,
  S_CGPA VARCHAR(5) NOT NULL
);

INSERT INTO VIT VALUES
  (1001, '7.2'),
  (1002, '8.6'),
  (1007, '9.25');

-- Rest of the code remains the same...

SELECT * FROM Worker INNER JOIN Bonus ON WORKER_ID = WORKER_REF_ID UNION SELECT * FROM Worker INNER JOIN Title ON WORKER_ID = WORKER_REF_ID;

SELECT w.*, b.BONUS_AMOUNT, b.BONUS_DATE, t.WORKER_TITLE, t.AFFECTED_FROM FROM Worker w LEFT JOIN Bonus b ON w.WORKER_ID = b.WORKER_REF_ID LEFT JOIN Title t ON w.WORKER_ID = t.WORKER_REF_ID;

SELECT w.*, b.BONUS_AMOUNT, b.BONUS_DATE, t.WORKER_TITLE, t.AFFECTED_FROM FROM Worker w INNER JOIN Bonus b ON w.WORKER_ID = b.WORKER_REF_ID INNER JOIN Title t ON w.WORKER_ID = t.WORKER_REF_ID WHERE t.WORKER_TITLE = 'Manager';
